{"version":3,"sources":["Note.js","Board.js","index.js"],"names":["Note","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","editing","edit","bind","assertThisInitialized","remove","save","renderForm","renderDisplay","randomBetween","style","right","window","innerWidth","top","innerHeight","transform","concat","x","y","s","Math","ceil","random","textArea","_newText","focus","select","nextProps","nextState","children","setState","onRemove","index","e","preventDefault","onChange","value","_this2","react_default","a","createElement","className","onSubmit","ref","input","defaultValue","id","fa","onClick","Component","Board","notes","add","eachNote","update","nextId","self","count","fetch","then","response","json","split","forEach","sentence","substring","text","prevState","toConsumableArray","note","uniqueId","newText","i","console","log","map","objectSpread","filter","src_Note","key","ReactDOM","render","src_Board","document","getElementById"],"mappings":"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","file":"static/js/main.773b626b.chunk.js","sourcesContent":["/* gamla\nimport React, { Component } from 'react'\nimport { FaPencilAlt } from 'react-icons/fa';\nimport { FaTrashAlt } from 'react-icons/fa';\nimport { FaRegSave} from 'react-icons/fa';\n\n\nclass Note extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            editing : false\n        }\n            this.edit = this.edit.bind(this)\n            this.remove = this.remove.bind(this)\n            this.save = this.save.bind(this)\n            this.renderForm = this.renderForm.bind(this)\n            this.renderDisplay = this.renderDisplay.bind(this)\n        }\n    edit() {\n        this.setState({\n            editing: true\n        })\n    }\n    remove() {\n        this.props.onRemove(this.props.index)\n    }\n\n    save(e) {\n       e.preventDefault()\n       this.props.onChange(this._newText.value, this.props.index)\n       this.setState({\n           editing: false\n       })\n    }\n\n    renderForm() {\n        return (\n            <div className=\"Note\">\n            <form onSubmit={this.save}>\n                <textarea ref={input => this._newText = input} />\n                <button id=\"save\"><FaRegSave /> </button>\n                </form>\n                </div>\n        )\n    }\n\n    renderDisplay() {\n        return (\n            <div className=\"note\">\n                <p>{this.props.children}</p>\n                <span>\n                    <button onClick={this.edit} id=\"edit\"><FaPencilAlt /></button>\n                    <button onClick={this.remove} id=\"remove\"><FaTrashAlt /></button>\n                    </span>\n                  </div>\n        )\n    }\n    render() {\n        return this.state.editing ? this.renderForm() : this.renderDisplay()\n    }\n}\n\nexport default Note */\n\n//nya\n\n/*import React, { Component } from 'react'\nimport FaPencil from 'react-icons/lib/fa/pencil'\nimport FaTrash from 'react-icons/lib/fa/trash'\nimport FaFloppyO from 'react-icons/lib/fa/floppy-o'*/\nimport React, { Component } from 'react'\nimport { FaPencilAlt } from 'react-icons/fa';\nimport { FaTrashAlt } from 'react-icons/fa';\nimport { FaRegSave} from 'react-icons/fa';\n\n\n\nclass Note extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tediting: false\n\t\t}\n\t\tthis.edit = this.edit.bind(this)\n\t\tthis.remove = this.remove.bind(this)\n\t\tthis.save = this.save.bind(this)\n\t\tthis.renderForm = this.renderForm.bind(this)\n        this.renderDisplay = this.renderDisplay.bind(this)\n        this.randomBetween = this.randomBetween.bind(this)\n    }\n    \n    componentWillMount() {\n        this.style = {\n            right: this.randomBetween(0, window.innerWidth - 150, 'px'),\n            top: this.randomBetween(0, window.innerHeight -150, 'px'),\n            transform: `rotate(${this.randomBetween(-25, 25, 'deg')})`\n        }\n    }\n    randomBetween(x, y, s) {\n        return x + Math.ceil(Math.random()\n        * (y-x)) + s\n    }\n\n    componentDidUpdate() {\n        var textArea\n        if(this.state.editing) {\n            textArea = this._newText\n            textArea.focus()\n            textArea.select()\n        } \n    }\n    shouldComponentUpdate(nextProps, nextState) {\n        return (\n            this.props.children !== nextProps.children || this.state !== nextState\n        )\n    }\n\n\tedit() {\n\t\tthis.setState({\n\t\t\tediting: true\n\t\t})\n\t}\n\n\tremove() {\n\t\tthis.props.onRemove(this.props.index)\n\t}\n\n\tsave(e) {\n\t\te.preventDefault()\n\t\tthis.props.onChange(this._newText.value, this.props.index)\n\t\tthis.setState({\n\t\t\tediting: false\n\t\t})\n\t}\n\n\trenderForm() {\n\t\treturn (\n\t\t\t<div className=\"note\" style={this.style}>\n\t\t\t\t<form onSubmit={this.save}>\n\t\t\t\t\t<textarea ref={input => this._newText = input}\n                    defaultValue={this.props.children}/>\n\t\t\t\t\t<button id=\"save\"><FaRegSave /> </button>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t)\n\t}\n\n\trenderDisplay() {\n\t\treturn (\n\t\t\t<div className=\"note\" style={this.style}>\n\t\t\t\t<p>{this.props.children}</p>\n\t\t\t\t<span>\n\t\t\t\t<button onClick={this.edit} id=\"edit\"><FaPencilAlt /></button>\n                    <button onClick={this.remove} id=\"remove\"><FaTrashAlt /></button>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t)\n\t}\n\trender() {\n\t\treturn this.state.editing ? this.renderForm() : this.renderDisplay()\n\t}\n\n}\n\nexport default Note\n\n\n\n\n\n","/* gamla\nimport React, { Component } from 'react'\nimport Note from './Note'\n//import FaPlus from 'react-icons/lib/fa/plus'\n\nclass Board extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            notes: []\n        }\n        this.add = this.add.bind(this)\n        this.eachNote = this.eachNote.bind(this)\n        this.update = this.update.bind(this)\n        this.remove = this.remove.bind(this)\n        this.nextId = this.nextId.bind(this)\n    }\n\n    add(text) {\n        this.setState(prevState => ({\n            notes: [\n                ...prevState.notes,\n                {\n                    id: this.nextId(),\n                    note: text\n                }\n            ]\n        }))\n    }\n\n    nextId() {\n        this.uniqueId = this.uniqueId || 0\n        return this.uniqueId++\n    }\n\n    update(newText, i) {\n        console.log('updating item at index', i, newText)\n        this.setState(prevState => ({\n            notes: prevState.notes.map(\n                note => (note.id !== i) ? note : {...note, note: newText}\n            )\n        }))\n    }\n\n    remove(id) {\n        console.log('removing item at', id)\n        this.setState(prevState => ({\n            notes: prevState.notes.filter(note => note.id !==id)\n        }))\n    }\n\n    eachNote(note, i) {\n        return (\n            <Note key={i}\n            index={i}\n            onChange={this.update}\n            onRemove={this.remove}>\n            {note.note}\n        </Note>\n        )\n    }\n\n    render () {\n        return (\n            <div className=\"board\">\n            {this.state.notes.map(this.eachNote)}\n                <button onClick={this.add.bind(null, \"New note\")}\n                id=\"add\"> +\n                </button>\n            </div>\n        )\n    }\n}\n\nexport default Board */\n\n//nya\n\nimport React, { Component } from 'react'\nimport Note from './Note'\n//import FaPlus from 'react-icons/lib/fa/plus'\n\nclass Board extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tnotes: []\n\t\t}\n\t\tthis.add = this.add.bind(this)\n\t\tthis.eachNote = this.eachNote.bind(this)\n\t\tthis.update = this.update.bind(this)\n\t\tthis.remove = this.remove.bind(this)\n\t\tthis.nextId = this.nextId.bind(this)\n\t}\n\n\tcomponentWillMount() {\n\t\tvar self = this\n\t\tif(this.props.count) {\n\t\t\tfetch(`https://baconipsum.com/api/?\n\t\t\ttype=all-meat&sentences=${this.props.count}`)\n\t\t\t\t.then(response => response.json())\n\t\t\t\t.then(json => json[0]\n\t\t\t\t\t.split('. ')\n\t\t\t\t.forEach(sentence => self.add(sentence.substring(0, 25))))\n\t\t}\n\t}\n\tadd(text) {\n\t\tthis.setState(prevState => ({\n\t\t\tnotes: [\n\t\t\t\t...prevState.notes,\n\t\t\t\t{\n\t\t\t\t\tid: this.nextId(),\n\t\t\t\t\tnote: text\n\t\t\t\t}\n\t\t\t]\n\t\t}))\n\t}\n\n\tnextId() {\n\t\tthis.uniqueId = this.uniqueId || 0\n\t\treturn this.uniqueId++\n\t}\n\n\tupdate(newText, i) {\n\t\tconsole.log('updating item at index', i, newText)\n\t\tthis.setState(prevState => ({\n\t\t\tnotes: prevState.notes.map(\n\t\t\t\tnote => (note.id !== i) ? note : {...note, note: newText}\n\t\t\t)\n\t\t}))\n\t}\n\n\tremove(id) {\n\t\tconsole.log('removing item at', id)\n\t\tthis.setState(prevState => ({\n\t\t\tnotes: prevState.notes.filter(note => note.id !== id)\n\t\t}))\n\t}\n\n\teachNote(note, i) {\n\t\treturn (\n\t\t\t<Note key={note.id}\n\t\t\t\t  index={note.id}\n\t\t\t\t  onChange={this.update}\n\t\t\t\t  onRemove={this.remove}>\n\t\t\t\t  {note.note}\n\t\t    </Note>\n\t\t)\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"board\">\n\t\t\t\t{this.state.notes.map(this.eachNote)}\n\t\t\t\t<button onClick={this.add.bind(null, \"New Note\")}\n\t\t\t\t\t\tid=\"add\">\n\t\t\t\t\t+\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Board","/*gamla \n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Board from './Board';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Board />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();*/\n\n//nya från kap 6\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport Board from './Board'\n//import registerServiceWorker from './registerServiceWorker'\n\nReactDOM.render(<Board count={50} />, document.getElementById('root'))\n//registerServiceWorker()\n"],"sourceRoot":""}